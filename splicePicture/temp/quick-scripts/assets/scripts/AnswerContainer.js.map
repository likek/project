{"version":3,"sources":["AnswerContainer.js"],"names":["cc","Class","extends","Component","properties","answer","Prefab","node2x2","node2x3","node3x3","gameJS","bottomNode","Node","start","initData","data","node","removeAllChildren","checkData","layoutType","parent","instantiate","addChild","split","col","row","avaliWidth","width","availHeight","height","itemWidth","itemHeight","r","c","x","y","__optionId","getComponent","CircleCollider","radius","Math","min","answerCopy","addComponent","Sprite","option","getOptionByAnswer","spriteFrame","getSpriteFrame","optioncontimg","test","optionID","question","questionArr","nowQuestionID","options","optionsArr","res","i","length","optionContent"],"mappings":"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","file":"AnswerContainer.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        answer: cc.Prefab,\n        node2x2: cc.Prefab,\n        node2x3: cc.Prefab,\n        node3x3: cc.Prefab,\n\n        gameJS: null,\n        bottomNode: cc.Node,\n    },\n    start () {\n\n    },\n\n    // update (dt) {},\n\n    initData(data){\n        this.node.removeAllChildren();\n        if(!this.checkData(data))return;\n        this.layoutType = data;\n        let parent = data === \"2x2\" ? this.node2x2 : (data === \"2x3\"? this.node2x3 : this.node3x3);\n        parent = cc.instantiate(parent);\n        this.node.addChild(parent);\n        data = data.split(\"x\");\n        let col = data[0];\n        let row = data[1];\n        let avaliWidth = parent.width;\n        let availHeight = parent.height;\n        let itemWidth = avaliWidth / col;\n        let itemHeight = availHeight / row;\n        for(let r = 0;r<row;r++){\n            for(let c = 0;c<col;c++){\n                let answer = cc.instantiate(this.answer);\n                parent.addChild(answer);\n                answer.width = itemWidth;\n                answer.height = itemHeight;\n                answer.x = itemWidth * c + itemWidth/2 - avaliWidth/2;\n                answer.y = itemHeight * r + itemHeight/2 - availHeight/2;\n                answer.__optionId = row-1-r + \"-\" + c;\n                answer.getComponent(cc.CircleCollider).radius = Math.min(answer.height,answer.width) * 0.248;\n\n                let answerCopy = new cc.Node();\n                answerCopy.addComponent(cc.Sprite);\n                this.bottomNode.addChild(answerCopy);\n                answerCopy.width = answer.width;\n                answerCopy.height = answer.height;\n                answerCopy.x = answer.x;\n                answerCopy.y = answer.y;\n\n                var option = this.getOptionByAnswer(answer.__optionId);\n                answerCopy.getComponent(cc.Sprite).spriteFrame = this.gameJS.getSpriteFrame(option.optioncontimg);\n            }\n        }\n    },\n    checkData(data){\n        return typeof data === \"string\" && /\\d+x\\d+/.test(data);\n    },\n\n    getOptionByAnswer(optionID){\n        var question = this.gameJS.questionArr[this.gameJS.nowQuestionID];\n        var options = question.optionsArr;\n        var res = null;\n        for(let i=0;i<options.length;i++){\n            if(options[i].optionContent === optionID){\n                res = options[i];\n            }\n        }\n        return res;\n    }\n});\n"]}