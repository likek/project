{"version":3,"sources":["AnswerContainer.js"],"names":["cc","Class","extends","Component","properties","answer","Prefab","node2x2","node2x3","node3x3","gameJS","bottomNode","Node","start","initData","data","setBoxs","node","container","removeAllChildren","checkData","parent","instantiate","addChild","split","col","row","avaliWidth","width","availHeight","height","itemWidth","itemHeight","r","c","x","y","__optionId","getComponent","CircleCollider","radius","Math","min","answerCopy","addComponent","Sprite","option","getOptionByAnswer","loader","load","optioncontimg","err","res","spriteFrame","SpriteFrame","releaseAsset","test","optionID","question","questionArr","nowQuestionID","options","optionsArr","i","length","optionContent"],"mappings":"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","file":"AnswerContainer.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        answer: cc.Prefab,\n        node2x2: cc.Prefab,\n        node2x3: cc.Prefab,\n        node3x3: cc.Prefab,\n\n        gameJS: null,\n        bottomNode: cc.Node,\n    },\n    start () {\n\n    },\n\n    // update (dt) {},\n\n    initData(data){\n        this.setBoxs(this.node,data);\n        // this.setBoxs(this.bottomNode,data);\n\n        // var items = this.bottomNode.children[0].children[0];//底部所有片段\n        // for(let i = 0;i<items;i++){\n           \n        // }\n    },\n\n    setBoxs(container,data){\n        container.removeAllChildren();\n        if(!this.checkData(data))return;\n        let parent = data === \"2x2\" ? this.node2x2 : (data === \"2x3\"? this.node2x3 : this.node3x3);\n        parent = cc.instantiate(parent);\n        container.addChild(parent);\n        data = data.split(\"x\");\n        let col = data[0];\n        let row = data[1];\n        let avaliWidth = parent.width;\n        let availHeight = parent.height;\n        let itemWidth = avaliWidth / col;\n        let itemHeight = availHeight / row;\n        for(let r = 0;r<row;r++){\n            for(let c = 0;c<col;c++){\n                let answer = cc.instantiate(this.answer);\n                parent.addChild(answer);\n                answer.width = itemWidth;\n                answer.height = itemHeight;\n                answer.x = itemWidth * c + itemWidth/2 - avaliWidth/2;\n                answer.y = itemHeight * r + itemHeight/2 - availHeight/2;\n                answer.__optionId = row-1-r + \"-\" + c;\n                answer.getComponent(cc.CircleCollider).radius = Math.min(answer.height,answer.width) * 0.248;\n\n                let answerCopy = new cc.Node();\n                answerCopy.addComponent(cc.Sprite);\n                this.bottomNode.addChild(answerCopy);\n                answerCopy.width = answer.width;\n                answerCopy.height = answer.height;\n                answerCopy.x = answer.x;\n                answerCopy.y = answer.y;\n\n                var option = this.getOptionByAnswer(answer.__optionId);\n                cc.loader.load(option.optioncontimg,(err,res)=>{\n                    if (!err) {\n                        var spriteFrame = new cc.SpriteFrame(res);\n                        answerCopy.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n                        cc.loader.releaseAsset(res);\n                    }\n                });\n            }\n        }\n    },\n    checkData(data){\n        return typeof data === \"string\" && /\\d+x\\d+/.test(data);\n    },\n\n    getOptionByAnswer(optionID){\n        var question = this.gameJS.questionArr[this.gameJS.nowQuestionID];\n        var options = question.optionsArr;\n        var res = null;\n        for(let i=0;i<options.length;i++){\n            if(options[i].optionContent === optionID){\n                res = options[i];\n            }\n        }\n        return res;\n    }\n});\n"]}